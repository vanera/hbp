#!/bin/sh

export POSTGRESQL_URL="postgres://kidxlcmjelupro:BIppLpyT2_5E2FsaDpbxv-X-Kv@ec2-54-221-236-4.compute-1.amazonaws.com:5432/d3tejf3n4ju9lc"
export LD_LIBRARY_PATH="/app/app/lib/"

export PATH=$PATH:/app/vendor/p7zip/bin:/app/vendor/nginx/sbin:/app/vendor/lua


indent() {
  sed -u 's/^/ --      /'
}

echo "-------------------------------------"
echo "bin/run ---> Installing Software: "
echo "-------------------------------------"

echo "Extracting Libraries" | indent

APP_DIR=/app
base=/app/vendor
mkdir -p $base


# package.tar.gz contains lua, lua-jit and nginx and friends
7za e $APP_DIR/packages/dist/php.7z -o$base/php -y > /dev/null 
7za e $APP_DIR/packages/dist/lua.7z -o$base/lua -y > /dev/null
7za e $APP_DIR/packages/dist/luajit.7z -o$base/luajit -y > /dev/null
7za e $APP_DIR/packages/dist/lualib.7z -o$base/lualib -y > /dev/null
7za e $APP_DIR/packages/dist/nginx.7z -o$base/nginx -y > /dev/null


cd $APP_DIR;
echo "-- Extracting Freezer Bundles"

for file in `ls $APP_DIR/freezer/bundles`; do
    file=${file%*/}
    name=${file%.7z}
    echo "---- extracting: $file ($name)"
    7za e $APP_DIR/freezer/bundles/$file -o $APP_DIR/vendor/$name -y > /dev/null
done


echo "Finished installing software packages" | indent

echo "-------------------------------------"
echo "bin/run ---> Generating Boot Cache "
echo "-------------------------------------"

cd $APP_DIR;
vendor/php/php vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/bin/build_bootstrap.php

echo "-------------------------------------"
echo "bin/run ---> Injecting External Config "
echo "-------------------------------------"

mkdir -p $APP_DIR/vendor/php/etc
cp -R $APP_DIR/conf/php/php.ini $APP_DIR/vendor/php/etc/


echo "-------------------------------------"
echo "bin/run ---> Preparing Configuration "
echo "-------------------------------------"

export APP_CONF=/app/conf/app.nginx
export APP_CONF_COMPILED=/app/conf/app.compiled.nginx

export LUA=/app/vendor/lua/lua

NGINX_ROOT=/app/vendor/nginx

NGINX_CONF=/app/conf/nginx.conf
NGINX_CONF_COMPILED=/app/conf/nginx.compiled.conf

NGINX=$NGINX_ROOT/nginx


echo "-------------------------------------"
echo "bin/run ---> Compiling NGINX Config  "
echo "-------------------------------------"


cat "$NGINX_CONF" | $LUA /app/lib/ngx_compiler.lua > "$NGINX_CONF_COMPILED"
cat "$APP_CONF" | $LUA /app/lib/ngx_compiler.lua > "$APP_CONF_COMPILED"
mkdir -p logs


mkdir -p /app/app/logs

touch /app/app/logs/nginx.error.log
touch /app/app/logs/nginx.access.log
touch /app/app/logs/nginx.debug.log
touch /app/app/logs/fpm.error.log

echo "-------------------------------------"
echo "bin/run ---> Starting PHP-FPM"
echo "-------------------------------------"

/app/vendor/php/php-fpm -y /app/conf/php/php-fpm.conf


echo "-------------------------------------"
echo "bin/run ---> Starting NGINX"
echo "-------------------------------------"

# read -d'' NginxCommand <<"EOF"
# #!/bin/bash
# export LD_LIBRARY_PATH=/app/vendor/luajit

# nginx_cmd=LD_LIBRARY_PATH=/app/vendor/luajit $nginx -p $NGINX_ROOT -c "$NGINX_CONF_COMPILED"

# $nginx_cmd $@

# EOF

echo $NginxCommand > /app/bin/ngx

cd "$NGINX_ROOT"
LD_LIBRARY_PATH=/app/vendor/luajit $NGINX -p $NGINX_ROOT -c "$NGINX_CONF_COMPILED"


echo "-------------------------------------"
echo "bin/run ---> WebServer Running: $PORT"
echo "-------------------------------------"
echo ""
echo ""

echo "-------------------------------------"
echo "bin/run ---> Tailing Logs to stdout  "
echo "-------------------------------------"

tail -f /app/app/logs/nginx*




